phases:
- phase: Main
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget
    BuildConfiguration: Release
  queue:
    name: Default

  steps:
  - checkout: self
    clean: true

  - task: GitVersion@3
    displayName: Git Version
    inputs:
      updateAssemblyInfo: false

  - task: DotNetCoreInstaller@0
    displayName: Install .Net Core
    inputs:
      version: '2.2.104'

  - task: DotNetCoreCLI@2
    displayName: Restore Packages
    inputs:
      command: restore

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      arguments: "--configuration $(BuildConfiguration) -property:Version=$(GitVersion.AssemblySemVer) -property:FileVersion=$(GitVersion.AssemblySemVer) -property:InformationalVersion=$(GitVersion.InformationalVersion)"
  
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: "**/*Tests/*.csproj"
      arguments: '--configuration $(BuildConfiguration) --no-build --collect:"Code Coverage" --logger trx'
  
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: "**/*Tests/**/*.trx"
      mergeTestResults: true

  - task: DotNetCoreCLI@2
    displayName: Publish Functions
    inputs:
      command: publish
      arguments: "--configuration $(BuildConfiguration) --no-build -property:Version=$(GitVersion.AssemblySemVer) -property:FileVersion=$(GitVersion.AssemblySemVer) -property:InformationalVersion=$(GitVersion.InformationalVersion) --output $(Build.ArtifactStagingDirectory)"
      zipAfterPublish: false
      modifyOutputPath: true

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: drop
      ArtifactType: Container